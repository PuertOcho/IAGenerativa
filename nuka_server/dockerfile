
# Fase de construcción: construye el proyecto Java usando Maven
FROM maven:3.9.0 AS builder

# Copia el código fuente del proyecto
COPY . /app
WORKDIR /app

# Prepara dependencias y compila la aplicación
RUN mvn clean dependency:go-offline -B
RUN mvn package -DskipTests

# Fase de ejecución: usa una imagen ligera con Java y las dependencias necesarias
FROM ubuntu:22.04

# Variables de entorno para evitar problemas con locale
ENV LANG=C.UTF-8 \
    PYTHONUNBUFFERED=1 \
    TZ=UTC

# Instala dependencias necesarias
RUN apt-get update && apt-get install -y wget gnupg ffmpeg alsa-utils libreoffice && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Instala dependencias necesarias y actualiza paquetes
RUN apt update && apt upgrade -y && \
    apt install -y apt-transport-https ca-certificates curl software-properties-common && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" && \
    apt update && \
    apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin && \
    rm -rf /var/lib/apt/lists/*
    
# Descarga e instala MongoDB Database Tools
RUN wget https://fastdl.mongodb.org/tools/db/mongodb-database-tools-ubuntu2204-x86_64-100.7.1.deb && \
    apt-get install -y ./mongodb-database-tools-ubuntu2204-x86_64-100.7.1.deb && \
    rm mongodb-database-tools-ubuntu2204-x86_64-100.7.1.deb

# Instala Python 3.10 y otras dependencias necesarias
RUN apt-get update && apt-get install -y software-properties-common && \
    add-apt-repository -y ppa:deadsnakes/ppa && \
    apt-get update && apt-get install -y python3.10 python3.10-venv python3.10-dev python3-pip ffmpeg alsa-utils wget unzip && apt-get clean && rm -rf /var/lib/apt/lists/*
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1

# Instala OpenJDK 17 (Java 17) para poder ejecutar la aplicación
RUN apt-get update && apt-get install -y openjdk-17-jdk && apt-get clean && rm -rf /var/lib/apt/lists/*


# Copia el archivo JAR desde la fase de construcción
COPY --from=builder /app/target/nuka_server-*.jar app.jar

# Expone el puerto en el que se ejecutará la aplicación
EXPOSE 9898

# Comando para ejecutar la aplicación
CMD ["java", "-jar", "app.jar"]


